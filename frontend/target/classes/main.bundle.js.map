{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/shared/giphy/giphy.service.ts","./src/app/user-record-add/user-record-add.component.html","./src/app/user-record-add/user-record-add.component.ts","./src/app/user-record-add/user-record-add.css","./src/app/user-record-list/user-record-list.component.html","./src/app/user-record-list/user-record-list.component.ts","./src/app/user-record-refresh/user-record-refresh.component.ts","./src/app/user-record/user-record.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"body {\\n margin: 0;\\n font-family: Roboto, sans-serif;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<body>\\n\\n<mat-toolbar color=\\\"primary\\\">\\n  <img width=\\\"180\\\" height=\\\"45\\\" \\n       src=\\\"https://www.idemia.com/sites/newco/themes/newco/img/logo.svg\\\" class=\\\"site-nav__logo\\\"><span class=\\\"title\\\">[ Coding Challenge ]</span> \\n</mat-toolbar>\\n<router-outlet></router-outlet>\\n</body>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import{Component}from'@angular/core';\nimport {HttpClient}from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n title = 'to the take-home assignment app!';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { MatButtonModule, MatCardModule, MatInputModule, MatListModule, MatToolbarModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UserRecordService } from './user-record/user-record.service';\nimport { UserRecordListComponent } from './user-record-list/user-record-list.component';\nimport { GiphyService } from './shared/giphy/giphy.service';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UserRecordAddComponent } from './user-record-add/user-record-add.component';\nimport { UserRecordRefreshComponent } from './user-record-refresh/user-record-refresh.component';\n\nconst appRoutes: Routes = [\n{ path: '', redirectTo: '/user-record-refresh', pathMatch: 'full' },\n{\npath: 'user-record-list',\ncomponent: UserRecordListComponent\n},\n{\npath: 'user-record-refresh',\ncomponent: UserRecordRefreshComponent\n},\n{\npath: 'user-record-add',\ncomponent: UserRecordAddComponent\n}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserRecordListComponent,\n    UserRecordAddComponent,\n    UserRecordRefreshComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatListModule,\n    MatToolbarModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [UserRecordService, GiphyService],\n  bootstrap: [AppComponent, UserRecordListComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class GiphyService {\n\n// Public beta key: https://github.com/Giphy/GiphyAPI#public-beta-key\ngiphyApi = '//api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&limit=1&q=';\n\nconstructor(public http: HttpClient) {\n  }\n\n  get(searchTerm) {\n    const apiLink = this.giphyApi + searchTerm;\n    return this.http.get(apiLink).map((response: any) => {\n      if (response.data.length > 0) {\n        return response.data[0].images.original.url;\n      } else {\n        return 'https://media.giphy.com/media/YaOxRsmrv9IeA/giphy.gif'; // dancing cat for 404\n      }\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/giphy/giphy.service.ts","module.exports = \"<script>\\n   angular.module('dateInputExample', [])\\n     .controller('DateController', ['$scope', function($scope) {\\n       $scope.example = {\\n         value: new Date(2013, 9, 22)\\n       };\\n     }]);\\n</script>\\n<mat-card>\\n    <form #recordForm=\\\"ngForm\\\" (ngSubmit)=\\\"blee(recordForm.value)\\\">\\n        <mat-card-header>\\n            <mat-card-title><h2>Add User Record</h2></mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n            <input type=\\\"hidden\\\" name=\\\"href\\\" [(ngModel)]=\\\"record.href\\\">\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"User Name:\\\" [(ngModel)]=\\\"record.username\\\"\\n                       required name=\\\"username\\\" #username>\\n            </mat-form-field><br>\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"Favorite Quote:\\\" [(ngModel)]=\\\"record.description\\\"\\n                       required name=\\\"description\\\" #description>\\n            </mat-form-field><br>\\n            <mat-form-field>\\n                <input matInput type=\\\"date\\\" [(ngModel)]=\\\"record.DOB\\\"\\n                       placeholder=\\\"DOB:\\\" min=\\\"1913-01-01\\\" max=\\\"2010-12-31\\\" required name=\\\"DOB\\\" #DOB>\\n            </mat-form-field>\\n        </mat-card-content>\\n        <mat-card-actions>\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\"\\n                    [disabled]=\\\"!recordForm.form.valid\\\">Add\\n            </button>\\n            <a mat-raised-button color=\\\"warn\\\" routerLink=\\\"/user-record-refresh\\\">Cancel</a>\\n        </mat-card-actions>\\n    </form>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-record-add/user-record-add.component.html\n// module id = ./src/app/user-record-add/user-record-add.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserRecordService } from '../user-record/user-record.service';\nimport { GiphyService } from '../shared/giphy/giphy.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n    selector: 'app-user-record-add',\n    templateUrl: './user-record-add.component.html',\n    styleUrls: ['./user-record-add.css']\n    })\n\nexport class UserRecordAddComponent implements OnInit, OnDestroy {\n    record: any = {};\n    \n    sub: Subscription;\n    \n    constructor(private route: ActivatedRoute,\n              private router: Router,\n              private userRecordService: UserRecordService,\n              private giphyService: GiphyService) {\n    }\n\n    ngOnInit() {\n      }\n\n  ngOnDestroy() {\n  }\n\n  gotoList() {\n    this.router.navigate(['/user-record-list']); \n  }\n\n  blee(form: NgForm) {\n    this.userRecordService.save(form).subscribe(result => {\n      this.gotoList();\n    }, error => console.error(error));\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-record-add/user-record-add.component.ts","module.exports = \".giphy {\\n  margin: 10px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-record-add/user-record-add.css\n// module id = ./src/app/user-record-add/user-record-add.css\n// module chunks = main","module.exports = \"<mat-card>\\n    <button mat-fab color=\\\"primary\\\" routerLink=\\\"/user-record-add\\\">Add</button>\\n    <button mat-fab color=\\\"primary\\\" routerLink=\\\"/user-record-refresh\\\">Refresh</button>\\n    <mat-card-header><h3>User Record List</h3></mat-card-header>\\n    <mat-card-content>\\n        <mat-list>\\n            <mat-list-item *ngFor=\\\"let record of userrecords\\\">\\n                <img mat-list-avatar src=\\\"{{record.giphyUrl}}\\\">\\n                <h4 mat-line>Name: {{record.username}}</h4>\\n                <h4 mat-line>Favorite Quote: {{record.description}}</h4>\\n                <h4 mat-line>DOB: {{record.DOB}}</h4>\\n                <h4 mat-line>ID: {{record.uuid}}</h4>\\n            </mat-list-item>\\n        </mat-list>\\n    </mat-card-content>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-record-list/user-record-list.component.html\n// module id = ./src/app/user-record-list/user-record-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { UserRecordService } from '../user-record/user-record.service';\nimport { GiphyService } from '../shared/giphy/giphy.service';\n\n@Component({\n  selector: 'app-user-record-list',\n  templateUrl: './user-record-list.component.html', \n  styles: []\n})\nexport class UserRecordListComponent implements OnInit {\n\n    userrecords: Array<any>; \n\n    constructor(private userRecordService: UserRecordService, private giphyService: GiphyService) { }\n\n  ngOnInit() {\n    this.userRecordService.get().subscribe(data => {\n        this.userrecords = data;\n        for (const record of this.userrecords) {\n            this.giphyService.get(record.username).subscribe(url => record.giphyUrl = url);\n        }\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-record-list/user-record-list.component.ts","import { Component, OnInit } from '@angular/core';\nimport { UserRecordService } from '../user-record/user-record.service';\nimport { GiphyService } from '../shared/giphy/giphy.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-user-record-refresh',\n  templateUrl: '../user-record-list/user-record-list.component.html', \n  styles: []\n})\nexport class UserRecordRefreshComponent implements OnInit {\n\n    userrecords: Array<any>; \n    \n    constructor(private route: ActivatedRoute,\n              private router: Router, \n              private userRecordService: UserRecordService, \n              private giphyService: GiphyService) { \n        this.route.params.subscribe(val => {\n            this.userRecordService.refresh().subscribe(data => {\n                this.userrecords = data;\n                for (const record of this.userrecords) {\n                    this.giphyService.get(record.username).subscribe(url => record.giphyUrl = url);\n                }            \n            });\n            });          \n    }\n\n  ngOnInit() {  \n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-record-refresh/user-record-refresh.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class UserRecordService {\n    public API = '//localhost:8081';\n    public GET_USER_RECORDS = this.API + '/idemia/v1/users/records';\n    public REFRESH_USER_RECORDS = this.API + '/idemia/v1/users/records?action=refresh';\n    \n    constructor(private http: HttpClient) {  }\n\n    get(): Observable<any> {\n        return this.http.get(this.GET_USER_RECORDS);\n    }\n\n    refresh(): Observable<any> {\n        return this.http.get(this.REFRESH_USER_RECORDS);\n    }\n\n    save(record: any): Observable<any> {\n        let result: Observable<Object>;\n        result = this.http.post(this.GET_USER_RECORDS, record);\n        return result;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-record/user-record.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}